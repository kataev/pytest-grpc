# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: pytest_grpc/tests/example.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='pytest_grpc/tests/example.proto',
  package='test.v1',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1fpytest_grpc/tests/example.proto\x12\x07test.v1\"\x1b\n\x0b\x45\x63hoRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x1c\n\x0c\x45\x63hoResponse\x12\x0c\n\x04name\x18\x01 \x01(\t\"\x07\n\x05\x45mpty2\xeb\x01\n\x0b\x45\x63hoService\x12\x38\n\x07handler\x12\x14.test.v1.EchoRequest\x1a\x15.test.v1.EchoResponse\"\x00\x12>\n\rerror_handler\x12\x14.test.v1.EchoRequest\x1a\x15.test.v1.EchoResponse\"\x00\x12\x35\n\x08\x62locking\x12\x0e.test.v1.Empty\x1a\x15.test.v1.EchoResponse\"\x00\x30\x01\x12+\n\x07unblock\x12\x0e.test.v1.Empty\x1a\x0e.test.v1.Empty\"\x00\x62\x06proto3'
)




_ECHOREQUEST = _descriptor.Descriptor(
  name='EchoRequest',
  full_name='test.v1.EchoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='test.v1.EchoRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=71,
)


_ECHORESPONSE = _descriptor.Descriptor(
  name='EchoResponse',
  full_name='test.v1.EchoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='test.v1.EchoResponse.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=73,
  serialized_end=101,
)


_EMPTY = _descriptor.Descriptor(
  name='Empty',
  full_name='test.v1.Empty',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=103,
  serialized_end=110,
)

DESCRIPTOR.message_types_by_name['EchoRequest'] = _ECHOREQUEST
DESCRIPTOR.message_types_by_name['EchoResponse'] = _ECHORESPONSE
DESCRIPTOR.message_types_by_name['Empty'] = _EMPTY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

EchoRequest = _reflection.GeneratedProtocolMessageType('EchoRequest', (_message.Message,), {
  'DESCRIPTOR' : _ECHOREQUEST,
  '__module__' : 'pytest_grpc.tests.example_pb2'
  # @@protoc_insertion_point(class_scope:test.v1.EchoRequest)
  })
_sym_db.RegisterMessage(EchoRequest)

EchoResponse = _reflection.GeneratedProtocolMessageType('EchoResponse', (_message.Message,), {
  'DESCRIPTOR' : _ECHORESPONSE,
  '__module__' : 'pytest_grpc.tests.example_pb2'
  # @@protoc_insertion_point(class_scope:test.v1.EchoResponse)
  })
_sym_db.RegisterMessage(EchoResponse)

Empty = _reflection.GeneratedProtocolMessageType('Empty', (_message.Message,), {
  'DESCRIPTOR' : _EMPTY,
  '__module__' : 'pytest_grpc.tests.example_pb2'
  # @@protoc_insertion_point(class_scope:test.v1.Empty)
  })
_sym_db.RegisterMessage(Empty)



_ECHOSERVICE = _descriptor.ServiceDescriptor(
  name='EchoService',
  full_name='test.v1.EchoService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=113,
  serialized_end=348,
  methods=[
  _descriptor.MethodDescriptor(
    name='handler',
    full_name='test.v1.EchoService.handler',
    index=0,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='error_handler',
    full_name='test.v1.EchoService.error_handler',
    index=1,
    containing_service=None,
    input_type=_ECHOREQUEST,
    output_type=_ECHORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='blocking',
    full_name='test.v1.EchoService.blocking',
    index=2,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_ECHORESPONSE,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='unblock',
    full_name='test.v1.EchoService.unblock',
    index=3,
    containing_service=None,
    input_type=_EMPTY,
    output_type=_EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_ECHOSERVICE)

DESCRIPTOR.services_by_name['EchoService'] = _ECHOSERVICE

# @@protoc_insertion_point(module_scope)
